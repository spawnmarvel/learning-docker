services:
  db:
    # We use a mariadb image which supports both amd64 & arm64 architecture
    image: mariadb:10.6.4-focal
    # If you really want to use MySQL, uncomment the following line
    #image: mysql:8.0.27
    command: '--default-authentication-plugin=mysql_native_password'
    volumes:
      - vol_db_data:/var/lib/mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=somewordpress
      - MYSQL_DATABASE=wordpress
      - MYSQL_USER=wordpress
      - MYSQL_PASSWORD=wordpress
    expose:
      - 3306
      - 33060
    networks:
        - net_shared
  wordpress:
    image: wordpress:6.4-php8.1-apache
    # image: wordpress:latest
    volumes:
      - vol_wp_data:/var/www/html
    ports:
      - 80:80
    restart: always
    environment:
      - WORDPRESS_DB_HOST=db
      - WORDPRESS_DB_USER=wordpress
      - WORDPRESS_DB_PASSWORD=wordpress
      - WORDPRESS_DB_NAME=wordpress
    networks:
        - net_shared
   # phpmyadmin db management
  phpmyadmin:
      image: phpmyadmin:5.2.1
      depends_on:
        - db
      ports:
        - 8080:8080
        # not able to browse it
        
      environment:
        - PMA_ARBITRARY=1
      networks:
        - net_shared
    # portainer for view containers
  portainer:
      image: portainer/portainer-ce
      # command: https://gist.github.com/deviantony/62c009b41bde5e078b1a7de9f11f5e55
      restart: always
      ports:
        - 9443:9443
        - 8000:8000
      networks:
        - net_shared
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - vol_portainer_data:/data
networks:
  net_shared:
    driver: bridge
    
volumes:
  vol_db_data:
  vol_wp_data:
  vol_portainer_data:

# add phpmyadmin


# open inbound NSG
    # no http management, , refresh and clear cache
    # cd dir
    # docker compose up -d
    # http://public-ip:80

    # Edit Docker file?

    # docker compose down

    # docker rmi -f $(docker images -aq)

    # Maybe you need to rm volumes also if container name is changed or hostname

    # docker volume rm $(docker volume ls -qf dangling=true)

    # docker exec -it 4e7bc61a8410 bash